package io.project.spring.basics.exploits_test_system_backend.services;

import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.Response;
import org.springframework.stereotype.Service;

import java.io.IOException;
import java.util.Arrays;
import java.util.Base64;

@Service
public class GitService {
    private static final String GITHUB_API_URL = "https://api.github.com";
    private static final String TOKEN = "token";


    public static String[] fetchFileContent(String owner, String repo, String filePath, int lineNum) throws IOException {
        OkHttpClient client = new OkHttpClient();
        ObjectMapper objectMapper = new ObjectMapper();

        // Construct the URL to access the file content
        String url = String.format("%s/repos/%s/%s/contents/%s", GITHUB_API_URL, owner, repo, filePath);

        // Build the request with authorization
        Request request = new Request.Builder()
                .url(url)
                .header("Authorization", "token " + TOKEN)
                .build();

        // Execute the request
        try (Response response = client.newCall(request).execute()) {
            if (!response.isSuccessful()) {
                throw new IOException("Unexpected code: " + response);
            }

            // Parse the JSON response
            String jsonResponse = response.body().string();
            JsonNode rootNode = objectMapper.readTree(jsonResponse);

            // Decode the Base64 file content
            String base64Content = rootNode.get("content").asText();
            base64Content = base64Content.replaceAll("\\s+", ""); // Remove line breaks and spaces
            String str_lines = new String(Base64.getDecoder().decode(base64Content));

            String[] arr_lines = str_lines.split("\n");
            return Arrays.copyOfRange(arr_lines, lineNum, arr_lines.length);
        }
    }

}
