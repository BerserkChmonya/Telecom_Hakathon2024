import fs from 'fs/promises'; // Node.js file system module to handle file saving
import path from 'path';
import { demos_st, codes_st, desc_and_rec_st, rows_st } from '$lib/stores/dataStores.js';

export const actions = {
    submit: async ({ request }) => {
        const formData = await request.formData();

        const repoName = formData.get('repoName'); 
        const authorName = formData.get('authorName'); 
        const websiteLink = formData.get('websiteLink'); 
        const csvFile = formData.get('csvFile'); 

        console.log('Repository Name:', repoName);
        console.log('Author Name:', authorName);
        console.log('Website Link:', websiteLink);

        // Validate inputs
        if (!repoName || !authorName || !websiteLink) {
            return { error: 'Repository name, author name, and website link are required' };
        }

        // Check if file exists
        if (!csvFile || csvFile.size === 0) {
            return { error: 'No file uploaded' };
        }

        const backendFormData = new FormData();
        backendFormData.append('file', csvFile, csvFile.name); // Add the file
        backendFormData.append('owner', authorName);          // Add the authorName as "owner"
        backendFormData.append('repo', repoName);            // Add the repoName as "repo"
        backendFormData.append('website', websiteLink); 

 
        // const uploadPath = path.resolve('uploads', csvFile.name);
        // const buffer = await csvFile.arrayBuffer();
        // await fs.writeFile(uploadPath, Buffer.from(buffer)); 

        // console.log('File saved at:', uploadPath);

        try {
            const response = await fetch('http://localhost:8000/penetrate/get_all_data', {
                method: 'POST',
                body: backendFormData,
            });

            if (!response.ok) {
                const errorResponse = await response.json();
                return { error: errorResponse.message || 'Error sending data to the backend' };
            }

            const responseData = await response.json();
            let demos = responseData.demos;
            let codes = responseData.codes;
            let desc_and_rec = responseData.desc_and_rec;
            let rows = responseData.rows;

            // Save files to lopcal storage
            demos_st.set(demos);
            codes_st.set(codes);
            desc_and_rec_st.set(desc_and_rec);
            rows_st.set(rows);

            console.log(demos);
            console.log(codes);
            console.log(desc_and_rec);
            console.log(rows);

            return {
                success: true,
                message: 'Form submitted successfully',
                data: responseData,
            };
        } catch (error) {
            console.error('Error communicating with backend:', error);
            return { error: 'Failed to send data to backend' };
        }

        return {
              status: 303, // 303: See Other
                headers: {
                    location: '/analyze', // Redirect to the desired route
                }, 
        };
    },
};
